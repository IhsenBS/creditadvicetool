package weka.projet;

// Java Imports
import java.io.File;
import java.awt.BorderLayout;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.Random;
// Weka core functions Imports
import weka.core.Utils;
import weka.core.Instances;
import weka.core.converters.ArffSaver;
import weka.core.converters.ConverterUtils.DataSource;
import weka.gui.visualize.PlotData2D;
import weka.gui.visualize.ThresholdVisualizePanel;
// Weka Classifiers & Meta Classifiers Import 
import weka.classifiers.Classifier;
import weka.classifiers.evaluation.Evaluation;
import weka.classifiers.evaluation.ThresholdCurve;
import weka.classifiers.bayes.NaiveBayes;
import weka.classifiers.trees.RandomForest;
import weka.classifiers.meta.AdaBoostM1;
import weka.classifiers.meta.Bagging;
import weka.classifiers.meta.Stacking;
import weka.classifiers.meta.Vote;
import weka.classifiers.trees.DecisionStump;
import weka.classifiers.trees.J48;
import weka.classifiers.trees.RandomTree;
// Weka filters functions Imports
import weka.filters.Filter;
import weka.filters.unsupervised.attribute.Discretize;
import weka.filters.unsupervised.attribute.Remove;
import weka.filters.unsupervised.attribute.ReplaceMissingValues;
import weka.filters.unsupervised.instance.NonSparseToSparse;

public class NewJFrame extends javax.swing.JFrame {

    String database;

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        FiltreDiscretisizeIndex = new javax.swing.JTextField();
        ApplyFilterButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        ClassifiersFoldsNum = new javax.swing.JTextField();
        ClassifierPerformanceButton = new javax.swing.JButton();
        ROCButton = new javax.swing.JButton();
        jCheckBox5 = new javax.swing.JCheckBox();
        FiltreAttributeIndex = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        AdaBoostItNum = new javax.swing.JTextField();
        BaggingItNum = new javax.swing.JTextField();
        CombinerPerformanceButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jComboBox1 = new javax.swing.JComboBox();
        jSeparator3 = new javax.swing.JSeparator();
        existing_checking_account_field = new javax.swing.JTextField();
        duration_field = new javax.swing.JTextField();
        credit_history_field = new javax.swing.JTextField();
        purpuse_field = new javax.swing.JTextField();
        credit_amount_field = new javax.swing.JTextField();
        saving_accounts_bonds_field = new javax.swing.JTextField();
        existing_checking_account = new javax.swing.JLabel();
        duration_in_months = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        present_employment_since_field = new javax.swing.JTextField();
        installement_rate_income_field = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        personnal_status_sex_field = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        other_debtors_guarantors_field = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        housing_field = new javax.swing.JLabel();
        job_field = new javax.swing.JLabel();
        number_liable_field = new javax.swing.JLabel();
        own_telephone_filed = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        present_residence_since_field = new javax.swing.JTextField();
        property_field = new javax.swing.JTextField();
        age_field = new javax.swing.JTextField();
        other_payment_plans_field = new javax.swing.JTextField();
        housing__field = new javax.swing.JTextField();
        job__field = new javax.swing.JTextField();
        numb_liable_field = new javax.swing.JTextField();
        own_phone_field = new javax.swing.JTextField();
        foreign_worker_field = new javax.swing.JTextField();
        number_existing_field = new javax.swing.JLabel();
        numb_existing_field = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Banking : Credit Advice Tool");

        jButton1.setText("Load");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("Filtres :");

        jCheckBox1.setText("Discretisation");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        FiltreDiscretisizeIndex.setText("Index");

        ApplyFilterButton.setText("Apply");
        ApplyFilterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApplyFilterButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Cross Validation :");

        ClassifiersFoldsNum.setText("Number of Folds");
        ClassifiersFoldsNum.setToolTipText("");

        ClassifierPerformanceButton.setText("Performance");
        ClassifierPerformanceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClassifierPerformanceButtonActionPerformed(evt);
            }
        });

        ROCButton.setText("ROC");
        ROCButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ROCButtonActionPerformed(evt);
            }
        });

        jCheckBox5.setText("Filtre Attributes");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });

        FiltreAttributeIndex.setText("Index");
        FiltreAttributeIndex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FiltreAttributeIndexActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jLabel3.setText("Combiner :");

        jCheckBox7.setText("AdaBoostM1");
        jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox7ActionPerformed(evt);
            }
        });

        jCheckBox8.setText("Bagging");

        AdaBoostItNum.setText("NumIterations");

        BaggingItNum.setText("NumIterations");
        BaggingItNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BaggingItNumActionPerformed(evt);
            }
        });

        CombinerPerformanceButton.setText("Performance");
        CombinerPerformanceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CombinerPerformanceButtonActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("J48");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("NaiveBayes");

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("RandomForest");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "breast-cancer", "diabetes", "glass", "credit-g" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        existing_checking_account_field.setText("<0");
        existing_checking_account_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existing_checking_account_fieldActionPerformed(evt);
            }
        });

        duration_field.setText("24");
        duration_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duration_fieldActionPerformed(evt);
            }
        });

        credit_history_field.setText("all paid");

        purpuse_field.setText("new car");

        credit_amount_field.setText("10000");

        saving_accounts_bonds_field.setText("500<=X<1000");
        saving_accounts_bonds_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saving_accounts_bonds_fieldActionPerformed(evt);
            }
        });

        existing_checking_account.setText("Existing Checking Account :");

        duration_in_months.setText("Duration (In months) :");

        jLabel5.setText("Credit History : ");

        jLabel6.setText("Purpuse :");

        jLabel7.setText("Credit Amout :");

        jLabel8.setText("Saving Acounts Bonds :");

        present_employment_since_field.setText(">=7");

        installement_rate_income_field.setText("20");

        jLabel9.setText("Present Employment Since :");

        jLabel10.setText("Installment Rate (% Income):");

        jLabel11.setText("Other Debtors / Guarantors :");

        personnal_status_sex_field.setText("male single");

        jLabel12.setText("Personnal Status & Sex :");

        other_debtors_guarantors_field.setText("guarantor");

        jLabel13.setText("Present Residence Since :");

        jLabel14.setText("Property:");

        jLabel15.setText("Age (In Years):");

        jLabel16.setText("Others Payment Plans:");

        housing_field.setText("Housing :");

        job_field.setText("Job:");

        number_liable_field.setText("Number Of Liable People:");

        own_telephone_filed.setText("Own Telephone:");

        jLabel21.setText("Foreign Worker:");

        present_residence_since_field.setText("4");
        present_residence_since_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                present_residence_since_fieldActionPerformed(evt);
            }
        });

        property_field.setText("real estate");

        age_field.setText("30");

        other_payment_plans_field.setText("bank");

        housing__field.setText("own");

        job__field.setText("high qualif");

        numb_liable_field.setText("2");

        own_phone_field.setText("none");

        foreign_worker_field.setText("none");

        number_existing_field.setText("Number Existing Credits:");

        numb_existing_field.setText("0");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Result :");

        jTextField2.setText(".");

        jButton2.setText("Classify");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel23.setText("Client Details :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(52, 52, 52)
                                        .addComponent(jLabel1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(52, 52, 52)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jCheckBox1)
                                            .addComponent(jCheckBox5)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(64, 64, 64)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(FiltreDiscretisizeIndex, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(FiltreAttributeIndex, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(ApplyFilterButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(73, 73, 73)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButton3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jRadioButton2)
                                            .addComponent(jRadioButton1))
                                        .addGap(29, 29, 29)
                                        .addComponent(ClassifiersFoldsNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(200, 200, 200)
                                .addComponent(ClassifierPerformanceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(ROCButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(19, 19, 19)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AdaBoostItNum)
                                    .addComponent(BaggingItNum)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jCheckBox7)
                                            .addComponent(jLabel3)
                                            .addComponent(jCheckBox8))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(43, 43, 43))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(CombinerPerformanceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSeparator1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(duration_in_months)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel5))
                                .addGap(34, 34, 34))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel23)
                                    .addComponent(existing_checking_account))
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(credit_history_field, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(duration_field, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(purpuse_field, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(credit_amount_field, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(saving_accounts_bonds_field, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                                .addComponent(existing_checking_account_field)))))
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(installement_rate_income_field, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(personnal_status_sex_field, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                            .addComponent(present_employment_since_field, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(age_field)
                                .addComponent(property_field, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                            .addComponent(present_residence_since_field, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(other_debtors_guarantors_field)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(housing_field))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(job_field)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addGap(18, 18, 18))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(number_existing_field)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(number_liable_field)
                                        .addGap(10, 10, 10))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(44, 44, 44)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(other_payment_plans_field)
                                    .addComponent(housing__field)
                                    .addComponent(numb_existing_field)
                                    .addComponent(job__field, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                                    .addComponent(own_phone_field)
                                    .addComponent(foreign_worker_field)
                                    .addComponent(numb_liable_field)))
                            .addComponent(own_telephone_filed))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(52, 52, 52))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(200, 200, 200)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(859, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addComponent(FiltreAttributeIndex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FiltreDiscretisizeIndex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(ApplyFilterButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(AdaBoostItNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox8)
                                .addGap(4, 4, 4)
                                .addComponent(BaggingItNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(CombinerPerformanceButton)
                                    .addComponent(ClassifierPerformanceButton)
                                    .addComponent(ROCButton)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jRadioButton2)
                                    .addComponent(ClassifiersFoldsNum))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButton3)
                                .addGap(53, 53, 53)))
                        .addGap(94, 94, 94)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(present_employment_since_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(installement_rate_income_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(personnal_status_sex_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(other_debtors_guarantors_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGap(26, 26, 26)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(present_residence_since_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(property_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel15)
                                    .addComponent(age_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(duration_in_months)
                                .addGap(11, 11, 11))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(existing_checking_account_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(existing_checking_account))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(duration_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(credit_history_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(purpuse_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(credit_amount_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saving_accounts_bonds_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(other_payment_plans_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(housing__field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(housing_field))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(numb_existing_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(number_existing_field))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(job_field)
                                    .addComponent(job__field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(numb_liable_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(number_liable_field)
                                    .addComponent(jLabel22))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(own_phone_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(own_telephone_filed)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(foreign_worker_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel21))))))
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(222, 222, 222)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(363, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            //String s = jTextField1.getText();
            database = jComboBox1.getSelectedItem().toString();
            System.out.println("***" + database);
            database = database + ".arff";
            DataSource source = new DataSource(database);

            Instances dataset = source.getDataSet();
            jTextArea1.setText(dataset.toSummaryString());
        } catch (Exception ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ApplyFilterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApplyFilterButtonActionPerformed
        // TODO add your handling code here:
        if (jCheckBox5.isSelected()) {
            //load dataset
            try {
                String s = database;
                DataSource source = new DataSource(s);
                Instances dataset = source.getDataSet();
                //use a simple filterto remove a certain attribute	
                //set up options to remove 1st attribute	
                String[] opts = new String[]{"-R", FiltreAttributeIndex.getText()};
                //create a Remove object (this is the filter class)
                Remove remove = new Remove();
                //set the filter options
                remove.setOptions(opts);
                //pass the dataset to the filter
                remove.setInputFormat(dataset);
                //apply the filter
                Instances newData = Filter.useFilter(dataset, remove);
                //now save the dataset to a new file as we learned before
                ArffSaver saver = new ArffSaver();
                saver.setInstances(newData);
                saver.setFile(new File("filtre.arff"));
                saver.writeBatch();
                source = new DataSource("filtre.arff");
                dataset = source.getDataSet();
                jTextArea1.setText(dataset.toSummaryString());

            } catch (Exception ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        if (jCheckBox1.isSelected()) {
            try {
                String s = database;
                DataSource source = new DataSource(s);
                Instances dataset = source.getDataSet();
                //set options
                String[] options = new String[2];
                //choose the number of intervals, e.g. 2 :
                //options[0] = "-B"; options[1] = "4";
                //choose the range of attributes on which to apply the filter:
                options[0] = "-R";
                String s1 = FiltreDiscretisizeIndex.getText();
                options[1] = s1;
                //options[4] = "-V";
                //Apply discretization:
                Discretize discretize = new Discretize();
                discretize.setOptions(options);
                discretize.setInputFormat(dataset);
                Instances newData = Filter.useFilter(dataset, discretize);

                ArffSaver saver = new ArffSaver();
                saver.setInstances(newData);
                saver.setFile(new File("filtre1.arff"));
                saver.writeBatch();
                source = new DataSource("filtre1.arff");
                dataset = source.getDataSet();
                jTextArea1.setText(dataset.toSummaryString());

            } catch (Exception ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_ApplyFilterButtonActionPerformed

    private void ClassifierPerformanceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClassifierPerformanceButtonActionPerformed

        if (jRadioButton2.isSelected()) {

            try {
                DataSource source;
                if (jCheckBox1.isSelected()) {
                    source = new DataSource("filtre1.arff");
                } else if (jCheckBox5.isSelected()) {
                    source = new DataSource("filtre.arff");
                } else {
                    String s = database;
                    source = new DataSource(s);
                }
                Instances dataset = source.getDataSet();
                //set class index to the last attribute
                dataset.setClassIndex(dataset.numAttributes() - 1);

                //create the classifier
                NaiveBayes nb = new NaiveBayes();
                Evaluation eval = new Evaluation(dataset);
                Random rand = new Random(1);

                //int seed = 1;
                String s2 = ClassifiersFoldsNum.getText();
                int i = Integer.parseInt(s2);
                //System.out.println(i)

                int folds = i;
                DataSource source1 = new DataSource("breast-cancer-test.arff");
                Instances testDataset = source1.getDataSet();
                //set class index to the last attribute
                testDataset.setClassIndex(testDataset.numAttributes() - 1);
                //now evaluate model
                //eval.evaluateModel(tree, testDataset);
                eval.crossValidateModel(nb, testDataset, folds, rand);
                jTextArea2.setText(eval.toSummaryString("Evaluation results:\n", false) + "\n" + "Correct % = " + eval.pctCorrect() + "\n"
                        + "Incorrect % = " + eval.pctIncorrect() + "\n" + "AUC = " + eval.areaUnderROC(1) + "\n" + "kappa = " + eval.kappa() + "\n"
                        + "MAE = " + eval.meanAbsoluteError() + "\n" + "RMSE = " + eval.rootMeanSquaredError() + "\n"
                        + "RAE = " + eval.relativeAbsoluteError() + "\n" + "RRSE = " + eval.rootRelativeSquaredError() + "\n"
                        + "Precision = " + eval.precision(1) + "\n" + "Recall = " + eval.recall(1) + "\n" + "fMeasure = " + eval.fMeasure(1)
                        + "\n" + "Error Rate = " + eval.errorRate() + "\n" + eval.toMatrixString("=== Overall Confusion Matrix ===\n"));

            } catch (Exception ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if (jRadioButton3.isSelected()) {

            try {
                DataSource source;
                if (jCheckBox1.isSelected()) {
                    source = new DataSource("filtre1.arff");
                } else if (jCheckBox5.isSelected()) {
                    source = new DataSource("filtre.arff");
                } else {
                    String s = database;
                    source = new DataSource(s);
                }
                Instances dataset = source.getDataSet();
                //set class index to the last attribute
                dataset.setClassIndex(dataset.numAttributes() - 1);

                //create the classifier
                RandomForest nb = new RandomForest();
                Evaluation eval = new Evaluation(dataset);
                Random rand = new Random(1);

                //int seed = 1;
                String s2 = ClassifiersFoldsNum.getText();
                int i = Integer.parseInt(s2);
                //System.out.println(i)

                int folds = i;
                DataSource source1 = new DataSource("breast-cancer-test.arff");
                Instances testDataset = source1.getDataSet();
                //set class index to the last attribute
                testDataset.setClassIndex(testDataset.numAttributes() - 1);
                //now evaluate model
                //eval.evaluateModel(tree, testDataset);
                eval.crossValidateModel(nb, testDataset, folds, rand);
                jTextArea2.setText(eval.toSummaryString("Evaluation results:\n", false) + "\n" + "Correct % = " + eval.pctCorrect() + "\n"
                        + "Incorrect % = " + eval.pctIncorrect() + "\n" + "AUC = " + eval.areaUnderROC(1) + "\n" + "kappa = " + eval.kappa() + "\n"
                        + "MAE = " + eval.meanAbsoluteError() + "\n" + "RMSE = " + eval.rootMeanSquaredError() + "\n"
                        + "RAE = " + eval.relativeAbsoluteError() + "\n" + "RRSE = " + eval.rootRelativeSquaredError() + "\n"
                        + "Precision = " + eval.precision(1) + "\n" + "Recall = " + eval.recall(1) + "\n" + "fMeasure = " + eval.fMeasure(1)
                        + "\n" + "Error Rate = " + eval.errorRate() + "\n" + eval.toMatrixString("=== Overall Confusion Matrix ===\n"));

            } catch (Exception ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (jRadioButton1.isSelected()) {

            try {
                DataSource source;
                if (jCheckBox1.isSelected()) {
                    source = new DataSource("filtre1.arff");
                } else if (jCheckBox5.isSelected()) {
                    source = new DataSource("filtre.arff");
                } else {
                    String s = database;
                    source = new DataSource(s);
                }
                Instances dataset = source.getDataSet();
                //set class index to the last attribute
                dataset.setClassIndex(dataset.numAttributes() - 1);

                //create the classifier
                J48 tree = new J48();
                Evaluation eval = new Evaluation(dataset);
                Random rand = new Random(1);

                //int seed = 1;
                String s2 = ClassifiersFoldsNum.getText();
                int i = Integer.parseInt(s2);
                //System.out.println(i)

                int folds = i;
                DataSource source1 = new DataSource("breast-cancer-test.arff");
                Instances testDataset = source1.getDataSet();
                //set class index to the last attribute
                testDataset.setClassIndex(testDataset.numAttributes() - 1);
                //now evaluate model
                //eval.evaluateModel(tree, testDataset);
                eval.crossValidateModel(tree, testDataset, folds, rand);
                jTextArea2.setText(eval.toSummaryString("Evaluation results:\n", false) + "\n" + "Correct % = " + eval.pctCorrect() + "\n"
                        + "Incorrect % = " + eval.pctIncorrect() + "\n" + "AUC = " + eval.areaUnderROC(1) + "\n" + "kappa = " + eval.kappa() + "\n"
                        + "MAE = " + eval.meanAbsoluteError() + "\n" + "RMSE = " + eval.rootMeanSquaredError() + "\n"
                        + "RAE = " + eval.relativeAbsoluteError() + "\n" + "RRSE = " + eval.rootRelativeSquaredError() + "\n"
                        + "Precision = " + eval.precision(1) + "\n" + "Recall = " + eval.recall(1) + "\n" + "fMeasure = " + eval.fMeasure(1)
                        + "\n" + "Error Rate = " + eval.errorRate() + "\n" + eval.toMatrixString("=== Overall Confusion Matrix ===\n"));

            } catch (Exception ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_ClassifierPerformanceButtonActionPerformed

    private void ROCButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ROCButtonActionPerformed
        try {
            DataSource source;
            if (jCheckBox1.isSelected()) {
                source = new DataSource("filtre1.arff");
            } else if (jCheckBox5.isSelected()) {
                source = new DataSource("filtre.arff");
            } else {
                String s = database;
                source = new DataSource(s);
            }
            Instances data = source.getDataSet();
            //set class index to the last attribute
            data.setClassIndex(data.numAttributes() - 1);

            // train classifier
            Classifier cl = null;
            if (jRadioButton2.isSelected()) {
                cl = new NaiveBayes();
            }
            if (jRadioButton1.isSelected()) {
                cl = new J48();
            }
            if (jRadioButton3.isSelected()) {
                cl = new RandomForest();
            }

            Evaluation eval = new Evaluation(data);
            String s2 = ClassifiersFoldsNum.getText();
            int i = Integer.parseInt(s2);
            //System.out.println(i)

            int folds = i;

            eval.crossValidateModel(cl, data, folds, new Random(1));

            // generate curve
            ThresholdCurve tc = new ThresholdCurve();
            int classIndex = 0;
            Instances result = tc.getCurve(eval.predictions(), classIndex);

            // plot curve
            ThresholdVisualizePanel vmc = new ThresholdVisualizePanel();
            vmc.setROCString("(Area under ROC = "
                    + Utils.doubleToString(tc.getROCArea(result), 4) + ")");
            vmc.setName(result.relationName());
            PlotData2D tempd = new PlotData2D(result);
            tempd.setPlotName(result.relationName());
            tempd.addInstanceNumberAttribute();
            // specify which points are connected
            boolean[] cp = new boolean[result.numInstances()];
            for (int n = 1; n < cp.length; n++) {
                cp[n] = true;
            }
            tempd.setConnectPoints(cp);
            // add plot
            vmc.addPlot(tempd);

            // display curve
            String plotName = vmc.getName();

            final javax.swing.JFrame jf = new javax.swing.JFrame(
                    "Weka Classifier Visualize: " + plotName);
            jf.setSize(500, 400);
            jf.getContentPane().setLayout(new BorderLayout());
            jf.getContentPane().add(vmc, BorderLayout.CENTER);
            jf.addWindowListener(new java.awt.event.WindowAdapter() {
                public void windowClosing(java.awt.event.WindowEvent e) {
                    jf.dispose();
                }
            });
            jf.setVisible(true);

        } catch (Exception ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_ROCButtonActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void CombinerPerformanceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CombinerPerformanceButtonActionPerformed
        List<Classifier> classifierscomb = new ArrayList<Classifier>();
        try {
            Classifier[] classifiers = {
                new J48(),
                new NaiveBayes(),
                new RandomForest()
            };
            DataSource source;
            if (jCheckBox1.isSelected()) {
                source = new DataSource("filtre1.arff");
            } else if (jCheckBox5.isSelected()) {
                source = new DataSource("filtre.arff");
            } else {
                String s = database;
                source = new DataSource(s);
            }
            Instances trainingData = source.getDataSet();
            //set class index .. as the last attribute
            if (trainingData.classIndex() == -1) {
                trainingData.setClassIndex(trainingData.numAttributes() - 1);
            }
            if (jCheckBox7.isSelected()) {
                AdaBoostM1 m1 = new AdaBoostM1();
                m1.setClassifier(new DecisionStump());//needs one base-classifier
                String s2 = AdaBoostItNum.getText();
                int i = Integer.parseInt(s2);
                m1.setNumIterations(i);
                m1.buildClassifier(trainingData);
                classifierscomb.add(m1);
            }
            if (jCheckBox8.isSelected()) {
                Bagging bagger = new Bagging();
                bagger.setClassifier(new RandomTree());//needs one base-model
                String s2 = BaggingItNum.getText();
                int i = Integer.parseInt(s2);

                bagger.setNumIterations(i);
                bagger.buildClassifier(trainingData);
                classifierscomb.add(bagger);
            }
            Vote voter = new Vote();
            voter.setClassifiers(classifierscomb.toArray(new Classifier[classifierscomb.size()]));//needs one or more classifiers
            voter.buildClassifier(trainingData);

            Evaluation eval = new Evaluation(trainingData);
            DataSource source1 = new DataSource("breast-cancer-test.arff");
            Instances testDataset = source1.getDataSet();
            //set class index to the last attribute
            testDataset.setClassIndex(testDataset.numAttributes() - 1);
            //now evaluate model
            eval.evaluateModel(voter, testDataset);

            jTextArea2.setText(eval.toSummaryString("Evaluation results:\n", false) + "\n" + "Correct % = " + eval.pctCorrect() + "\n"
                    + "Incorrect % = " + eval.pctIncorrect() + "\n" + "AUC = " + eval.areaUnderROC(1) + "\n" + "kappa = " + eval.kappa() + "\n"
                    + "MAE = " + eval.meanAbsoluteError() + "\n" + "RMSE = " + eval.rootMeanSquaredError() + "\n"
                    + "RAE = " + eval.relativeAbsoluteError() + "\n" + "RRSE = " + eval.rootRelativeSquaredError() + "\n"
                    + "Precision = " + eval.precision(1) + "\n" + "Recall = " + eval.recall(1) + "\n" + "fMeasure = " + eval.fMeasure(1)
                    + "\n" + "Error Rate = " + eval.errorRate() + "\n" + eval.toMatrixString("=== Overall Confusion Matrix ===\n"));

        } catch (Exception ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_CombinerPerformanceButtonActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void FiltreAttributeIndexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FiltreAttributeIndexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FiltreAttributeIndexActionPerformed

    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox7ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void BaggingItNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BaggingItNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BaggingItNumActionPerformed

    private void duration_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duration_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_duration_fieldActionPerformed

    private void existing_checking_account_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existing_checking_account_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_existing_checking_account_fieldActionPerformed

    private void saving_accounts_bonds_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saving_accounts_bonds_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saving_accounts_bonds_fieldActionPerformed

    private void present_residence_since_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_present_residence_since_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_present_residence_since_fieldActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        String existing_checking_accout = existing_checking_account_field.getText();
        
        String duration_string = duration_field.getText();
        int duration = Integer.parseInt(duration_string);
        
        String credit_history = credit_history_field.getText();
        String purpuse = purpuse_field.getText();
        String credit_accout = credit_amount_field.getText();
        String saving_accounts = saving_accounts_bonds_field.getText();
        
        String present_employment_since = present_employment_since_field.getText();
        String installement_rate = installement_rate_income_field.getText();
        String personnal_status = personnal_status_sex_field.getText();
        String other_guarantors = other_debtors_guarantors_field.getText();
        String present_residence_since = present_residence_since_field.getText();
        String property = property_field.getText();
        String age = age_field.getText();
        int i = Integer.parseInt(age);

        
        String other_payment_plans = other_payment_plans_field.getText();
        String housing = housing__field.getText();
        String num_existing = numb_existing_field.getText();
        String job = job__field.getText();
        String num_liable = numb_liable_field.getText();
        String phone = own_phone_field.getText();
        String foreign_worker = foreign_worker_field.getText();

        System.out.println("'"+existing_checking_accout+"',"+duration+",'"+credit_history+"',"+purpuse+","+credit_accout+",'"
                +saving_accounts+"',"+present_employment_since+","+installement_rate+","+personnal_status+","+other_guarantors+","
                +present_residence_since+","+property+","+age+","+other_payment_plans+","+housing+","+num_existing+","+job+","
                +num_liable+","+phone+","+foreign_worker);
        
        try(PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("myfile.arff", true)))) {
    out.println("'"+existing_checking_accout+"',"+duration+",'"+credit_history+"',"+purpuse+","+credit_accout+",'"
                +saving_accounts+"',"+present_employment_since+","+installement_rate+","+personnal_status+","+other_guarantors+","
                +present_residence_since+","+property+","+age+","+other_payment_plans+","+housing+","+num_existing+","+job+","
                +num_liable+","+phone+","+foreign_worker+","+"good");
}catch (IOException e) {
    //exception handling left as an exercise for the reader
}
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AdaBoostItNum;
    private javax.swing.JButton ApplyFilterButton;
    private javax.swing.JTextField BaggingItNum;
    private javax.swing.JButton ClassifierPerformanceButton;
    private javax.swing.JTextField ClassifiersFoldsNum;
    private javax.swing.JButton CombinerPerformanceButton;
    private javax.swing.JTextField FiltreAttributeIndex;
    private javax.swing.JTextField FiltreDiscretisizeIndex;
    private javax.swing.JButton ROCButton;
    private javax.swing.JTextField age_field;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField credit_amount_field;
    private javax.swing.JTextField credit_history_field;
    private javax.swing.JTextField duration_field;
    private javax.swing.JLabel duration_in_months;
    private javax.swing.JLabel existing_checking_account;
    private javax.swing.JTextField existing_checking_account_field;
    private javax.swing.JTextField foreign_worker_field;
    private javax.swing.JTextField housing__field;
    private javax.swing.JLabel housing_field;
    private javax.swing.JTextField installement_rate_income_field;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField job__field;
    private javax.swing.JLabel job_field;
    private javax.swing.JTextField numb_existing_field;
    private javax.swing.JTextField numb_liable_field;
    private javax.swing.JLabel number_existing_field;
    private javax.swing.JLabel number_liable_field;
    private javax.swing.JTextField other_debtors_guarantors_field;
    private javax.swing.JTextField other_payment_plans_field;
    private javax.swing.JTextField own_phone_field;
    private javax.swing.JLabel own_telephone_filed;
    private javax.swing.JTextField personnal_status_sex_field;
    private javax.swing.JTextField present_employment_since_field;
    private javax.swing.JTextField present_residence_since_field;
    private javax.swing.JTextField property_field;
    private javax.swing.JTextField purpuse_field;
    private javax.swing.JTextField saving_accounts_bonds_field;
    // End of variables declaration//GEN-END:variables
}
